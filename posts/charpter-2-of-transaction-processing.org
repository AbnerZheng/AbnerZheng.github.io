#+BEGIN_COMMENT
.. title: Charpter 2 of 《Transaction Processing》
.. slug: charpter-2-of-transaction-processing
.. date: 2017-07-22 21:59:55 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT

* 物理数据库中的操作

逻辑数据库中的元组集合被存储在一个底层物理数据库中，由固定大小的数据页组成，这些页存储在非易失的随机访问存储器中, 一般是磁盘。为了读取或更新逻辑数据库中的元组，包含该元组的页必须先从磁盘中读取到数据库的内存缓存中，被更新的页之后被写回磁盘，替代旧版本。 数据库管理系统的缓存管理模块管理经常访问的数据库页,使之尽可能久地保存在缓存中, 以减少昂贵的随机读写需求.

在本章中，我们讨论物理数据库中的主题: 逻辑数据库层的事务管理和逻辑数据库行为所触发的底层物理数据库结构的管理之间的相互影响. 这些主题包括数据库的基于页的构造， 在缓存中固定页以减少访问页时间, 物理数据库中的完整性约束,将页锁起来以防止其他并发线程导致影响的访问, 实现在物理数据库中的结构修改作为一个原子操作序列，

** 2.1 服务器中的数据结构和处理

两个持久话(非易失)的数据集合维护在事务服务器中:
1. 数据磁盘: 包含数据库的关系、索引和系统目录或数据字典
2. 日志磁盘: 包含为数据库更新的日志记录

当数据库的一个实例在运行时，以下易失性数据结构维护在服务器进程的虚拟内存中:

3. [@3] 缓存池或数据库缓存，缓存从磁盘中读取的数据库页.
4. 日志缓存(log buffer)， 用于缓存日志文件.
5. 活跃事务表， 存储关于活跃事务的信息.
6. 修改页表, 存储关于缓存页的信息.
7. 锁表， 存储被活跃事务持有锁的信息(当事务并发控制是基于锁实现时)
8. 其他易失结构， 比如一个查询计划缓存，存储可重用的已编译的查询执行计划

数据磁盘和数据库缓存基于数据库页的随机访问(通过页标识码), 而日志磁盘和日志缓存是只可顺序添加的文件. 每个数据库更新操作在一个从数据磁盘中读入数据库缓存的页上， 该更新以一条日志条目添加到日志缓存中。该日志记录持有足够的信息，保证能够重做对页上旧版本数据的更新(当更新因为错误而丢失时)或者撤销该更新(在事务回滚的时候).

在事务提交或日志缓存满的时候， 日志中的内容被刷新到日志磁盘中，这些日志记录被添加到上一次刷入的结尾. 因此，每一个提交的事务都至少将它的所有更新持久化到日志磁盘。

在基于日志的系统中，事务处理的最重要的效率来源是数据磁盘不需要立刻反映事务的更新: 数据库缓存中的更新页不需要在事务提交时被写入。 为了保证操作的正确性，一个更新的数据页一定不能在更新对应的日志记录被写入前写入。

在一个数据库系统实例中， 若干数据库进程在共享在磁盘的数据以及共享虚拟内存数据结构上进行操作:

1. 服务器进程和它们的线程(前面已经提到)响应从应用进程过来的请求并且生成事务
2. 数据库写进程将已更新的数据库页从缓冲区中刷入到磁盘中
3. 日志写进程在日志缓冲区满的时候或当服务器进程在事务提交上要求的情况下，将日志从缓冲区写入到磁盘中
4. Checkpoint 进程周期性的设置一个checkpoint, 保证之前的相关易失数据写入到磁盘中
5.
